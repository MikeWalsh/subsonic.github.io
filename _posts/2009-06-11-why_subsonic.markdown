---
layout: post
title: "Why SubSonic"
---

# Why SubSonic

##[Summary]()

 SubSonic will be your friend, will never tell you you're dumb, and will do whatever it takes to get you home earlier, convincing you that too many hours spent at work turn you into a potato.  Part of using SubSonic is the letting go of a lot of things that you may cling to, and letting our convention take over (ideally our convention and the things you cling to are the same. Sometimes not though).  

<h2>Your Way== All of the approaches SubSonic uses are based on the idea that we don't want to get in your way. Each of the approaches below (except for SimpleRepository) relies on code generated by T4 templates. If you don't like something - change it! It's easy to do and if you tweak the templates enough, share them with us!  ==Simple Repository</h2>

 If you're the kind of person who wants to do things your way, 
 and the SimpleRepository will save them for you. It will also create your database on the fly if you want, altering the schema as you change your object.  

<h2>ActiveRecord</h2>

 If you like having to do as little as possible with your data access, 
 method.  

<h2>Traditional Repository== If you like Linq to Sql and want the convenience of a Repository for testing, we have that worked up for you as well.  ==Linq To SubSonic</h2>

 At the core of SubSonic's templates is 
. Originally created by Matt Warren, our Linq tool allows you to create your own Linq implementation very, very easily.
